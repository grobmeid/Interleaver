import java.io.File;
import java.io.FileNotFoundException;
import java.util.LinkedList;
import java.util.Scanner;


public class Project_1 {
	
	
	
	public static void stringToMemory(String data) {
		//Changing to uppercase
		String newData = data.toUpperCase().trim();
		//getting rid of punctuations and spaces
		String newerData = newData.replaceAll("\\s+","");
		//print to check
		System.out.println("The text to encrypt is: " + newerData);

		//Important for comparing size between linkedlists and interleaver input. 
		System.out.println("How many columns would you like to have for the interleaver: ");
		Scanner input = new Scanner(System.in);
		int numberInput = input.nextInt();

		//Top
		LinkedList<String> ll = new LinkedList<String>();
		//Bottom
		LinkedList<String> zz = new LinkedList<String>();
			
		//For looking for every other character within the linkedList
		for (int i=0; i<newerData.length(); i+=2) {
			System.out.print(newerData.charAt(i));
			String s = String.valueOf(newerData.charAt(i)); 
			ll.add(s);
		}
		
		//Printing the top row
		System.out.println(" --> " + ll + " This is the top row" );
		for (int i=1; i<newerData.length(); i+=2) {
			String s = String.valueOf(newerData.charAt(i)); 
			zz.add(s);
			System.out.print(s);
			}
		
		//bottom list has to equal top list in size, if not, pad with Z's
		while (zz.size() < ll.size()) {
			zz.add("Z");
		}
		
		System.out.println(" --> " + zz + " This is the bottom row with padded Z");
		
		//If the length of the interleaver is specified, padding Z's
		while (numberInput > ll.size() || numberInput > zz.size()) {
			ll.add("Z");
			zz.add("Z");
		}
		System.out.println();
		System.out.println(ll + "adding z");
		System.out.println(zz + "adding z");
	}

	public static void main(String[] args) {
		//read in a text file input
		try {
			File text = new File("givenText.txt");
			Scanner read = new Scanner(text);
			while (read.hasNextLine()) {
				String data = read.nextLine();
				stringToMemory(data);
			}
			
			read.close();
		} catch (FileNotFoundException e) {
			System.out.println("There is no file chosen");
			e.printStackTrace();
		}
		
	}
	
}
